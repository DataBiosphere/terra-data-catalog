name: Build and Test

on:
  push:
    branches: [ main ]
    paths-ignore: [ '*.md' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install black and link shellcheck into expected location
        run: |
          pip install black --force-reinstall black==22.3.0
          sudo ln -s $(which shellcheck) /usr/local/bin/shellcheck
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build all projects without running tests
        run: ./gradlew --build-cache build -x test

      - name: Upload spotbugs results
        uses: github/codeql-action/upload-sarif@main
        with:
          sarif_file: service/build/reports/spotbugs/main.sarif

  dispatch-trivy:
    needs: [ build ]
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'

    steps:
      - name: Fire off Trivy action
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: Trivy
          token: ${{ secrets.BROADBOT_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}

  source-clear:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: SourceClear scan
        env:
          SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
        run: ./gradlew --build-cache srcclr

  unit-tests-and-sonar:
    needs: [ build ]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports: [ "5432:5432" ]

    steps:
      - uses: actions/checkout@v3
        # Needed by sonar to get the git history for the branch the PR will be merged into.
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Make sure Postgres is ready and init
        env:
          PGPASSWORD: postgres
        run: |
          pg_isready -h localhost -t 10
          psql -h localhost -U postgres -f scripts/postgres-init.sql

      - name: Test with coverage
        run: ./gradlew --build-cache test jacocoTestReport

      # The Sonar scan is done here, so it can upload the coverage report generated by the tests.
      - name: Sonar scan
        run: ./gradlew --build-cache :common:sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  admin-cli-test:
    needs: [ build ]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports: [ "5432:5432" ]

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Make sure Postgres is ready and init
        env:
          PGPASSWORD: postgres
        run: |
          pg_isready -h localhost -t 10
          psql -h localhost -U postgres -f scripts/postgres-init.sql

      - name: Smoke test -- run the CLI
        run: UPGRADE_DB=true ./gradlew --build-cache :admin-cli:bootRun --args=list

  notify-slack:
    needs: [ unit-tests-and-sonar, source-clear, admin-cli-test ]
    runs-on: ubuntu-latest

    if: failure() && github.ref == 'refs/heads/main'

    steps:
      - name: Notify slack on failure
        uses: broadinstitute/action-slack@v3.15.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          channel: ${{ vars.SLACK_NOTIFICATION_CHANNELS }}
          status: failure
          author_name: Build on dev
          fields: job,message
          text: 'Build failed :sadpanda:'
          username: 'Data Explorer GitHub Action'

  dispatch-tag:
    needs: [ unit-tests-and-sonar, source-clear, admin-cli-test ]
    runs-on: ubuntu-latest

    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: Fire off tag action
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: Tag
          token: ${{ secrets.BROADBOT_TOKEN }}
