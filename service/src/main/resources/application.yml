# All env variables that are used in one place
# This is for deployment-specific values, which may be managed by other teams
env:
  db:
    host: jdbc:postgresql://${DATABASE_HOSTNAME:127.0.0.1}:5432
    init: ${INIT_DB:false}
    catalog:
      name: ${DATABASE_NAME:catalog_db}
      pass: ${DATABASE_USER_PASSWORD:dbpwd}
      user: ${DATABASE_USER:dbuser}
  tracing:
    exportEnabled: ${CLOUD_TRACE_ENABLED:false}
    samplingRate: ${SAMPLING_PROBABILITY:0}

# Below here is non-deployment-specific

# When the target is 'local' the write-config.sh script will generate this properties file. It
# contains the configuration of the BPM test application. We can use that application in our
# integration testing to make sure the application code paths are working. However, we do not
# want it to appear in production environments.
spring.config.import: optional:file:../config/local-properties.yml

logging.pattern.level: '%X{requestId} %5p'

server:
  compression:
    enabled: true
    mime-types: text/css,application/javascript
  port: 8080

spring:
  application.name: profile
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 0
          must-revalidate: true
        use-last-modified: false
      static-locations: classpath:/api/

catalog:
  ingress:
    # Default value that's overridden by Helm.
    domain-name: localhost:8080

  job:
    max-threads: 4
    polling-interval-seconds: 1
    resource-id: mc-terra-data-catalog
    timeout-seconds: 1800

  status-check:
    enabled: true
    polling-interval-seconds: 60
    startup-wait-seconds: 5
    staleness-threshold-seconds: 125

  catalog-database:
    initialize-on-start: ${env.db.init}
    password: ${env.db.catalog.pass}
    upgrade-on-start: true
    uri: ${env.db.host}/${env.db.catalog.name}
    username: ${env.db.catalog.user}

terra.common:
  kubernetes:
    in-kubernetes: false

  tracing:
    stackdriverExportEnabled: ${env.tracing.exportEnabled}
    samplingRate: ${env.tracing.samplingRate}
